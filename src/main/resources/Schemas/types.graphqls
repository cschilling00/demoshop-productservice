type Mutation {
    createProduct(product: ProductInput): Product
    deleteProduct(id: String!): String
    editProduct(product: ProductInput): Product
    createOrder(order: OrderInput): Order
    deleteOrder(id: String!): String
    editOrder(order: OrderInput): Order
}

type Product {
    id: String!
    name: String!
    description: String!
    price: Float!
    category: Category
}
type Order {
    id: String!,
    products: [Product]!
    orderDate: String!,
    price: Float!
    userId: String!
}

enum Category {
    SMARTPHONE, LAPTOP, TABLET, MP3
}

input ProductInput {
    id: String!
    name: String!
    description: String!
    price: Float!
    category: Category
    __typename: String
}

input OrderInput {
    id: String!,
    products: [ProductInput]!
    orderDate: String!,
    price: Float!
    userId: String!
}

type Query {
    getProducts: [Product]!
    getProductById(id: String!): Product
    getOrders: [Order]!
    getOrderById(id: String!): Order
    getOrderByUserId(id: String!): [Order]!
}